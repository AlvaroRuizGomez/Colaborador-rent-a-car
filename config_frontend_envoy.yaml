# https://github.com/envoyproxy/envoy/issues/17484

static_resources:
  # secrets:
  #   - name: server_cert
  #     tls_certificate:
  #       certificate_chain:
  #         filename: certs/servercert.pem
  #       private_key:
  #         filename: certs/serverkey.pem
  #   - name: client_cert
  #     tls_certificate:
  #       certificate_chain:
  #         filename: certs/clientcert.pem
  #       private_key:
  #         filename: certs/clientkey.pem
  #   - name: validation_context
  #     validation_context:
  #       trusted_ca:
  #         filename: certs/cacert.pem
  #       verify_certificate_hash:
  #         E0:F3:C8:CE:5E:2E:A3:05:F0:70:1F:F5:12:E3:6E:2E:97:92:82:84:A2:28:BC:F7:73:32:D3:39:30:A1:B6:FD

  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    listener_filters:
    - name: "envoy.filters.listener.tls_inspector"
    per_connection_buffer_limit_bytes: 32768  # 32 KiB
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: frontend_cluster
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                redirect:
                  path_redirect: "/"
                  https_redirect: true
                # route:
                #   cluster: frontend_basico
              - match:
                  prefix: "/rent"
                redirect:
                  # prefix_rewrite: "/"
                  path_redirect: "/rent"
                  https_redirect: true
                # route:
                #   cluster: frontend
          http_filters:
          - name: "envoy.filters.http.cache"
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions.filters.http.cache.v3alpha.CacheConfig"
              typed_config:
                "@type": "type.googleapis.com/envoy.extensions.cache.simple_http_cache.v3alpha.SimpleHttpCacheConfig"
          - name: envoy.filters.http.compressor
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.compressor.v3.Compressor
              response_direction_config:
                common_config:
                  min_content_length: 100
                  content_type:
                  - text/html
                  - text/plain
                  - text/css
                  - text/xml
                  - text/javascript
                  - application/json
                  - application/javascript
                  - application/x-javascript 
                  - application/xml
                  - application/xml+rss
                  - application/xhtml+xml
                  - image/svg+xml
                disable_on_etag_header: true
              compressor_library:
                name: text_optimized
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.compression.gzip.compressor.v3.Gzip
                  memory_level: 3
                  window_bits: 10
          - name: envoy.filters.http.router

  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: frontend_cluster
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: frontend_basico
              - match:
                  prefix: "/rent"
                route:
                  cluster: frontend
          http_filters:
          - name: "envoy.filters.http.cache"
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions.filters.http.cache.v3alpha.CacheConfig"
              typed_config:
                "@type": "type.googleapis.com/envoy.extensions.cache.simple_http_cache.v3alpha.SimpleHttpCacheConfig"
          - name: envoy.filters.http.router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            # The following self-signed certificate pair is generated using:
            # $ openssl req -x509 -newkey rsa:2048 -keyout a/front-proxy-key.pem -out  a/front-proxy-crt.pem -days 3650 -nodes -subj '/CN=front-envoy'
            #
            # Instead of feeding it as an inline_string, certificate pair can also be fed to Envoy
            # via filename. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/base.proto#config-core-v3-datasource.
            #
            # Or in a dynamic configuration scenario, certificate pair can be fetched remotely via
            # Secret Discovery Service (SDS). Reference: https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret.
              - certificate_chain:
                  filename: "/etc/cert.pem"
                private_key:
                  filename: "/etc/privkey.pem"

  clusters:
  - name: frontend_basico
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: frontend_basico
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: frontend_basico
                port_value: 443
  - name: frontend
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: frontend
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: frontend
                port_value: 8080
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options:
            initial_stream_window_size: 65536  # 64 KiB
            initial_connection_window_size: 1048576  # 1 MiB
admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
layered_runtime:
  layers:
  - name: static_layer_0
    static_layer:
      envoy:
        resource_limits:
          listener:
            example_listener_name:
              connection_limit: 10000
      overload:
        global_downstream_max_connections: 50000