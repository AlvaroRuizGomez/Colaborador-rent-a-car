name: accion para subir imagen a servidor
on:
  push:
    branches: [ dev-joseluis ]
jobs:
  # test:
    # runs-on: ubuntu-20.04
    # steps:
      # - 
      #   name: Running Server & Testing API
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'
      #   run: |
      #     npm install
      #     NODE_ENV=production \
      #     PORT_BACKEND=${{ secrets.PORT_BACKEND }} \
      #     PORT_FRONTEND=${{ secrets.PORT_FRONTEND }} \
      #     REDISDB_PORT=${{ secrets.REDISDB_PORT }} \
      #     REDISDB_HOST=${{ secrets.REDISDB_HOST }} \
      #     REDISDB_PASSWORD=${{ secrets.REDISDB_PASSWORD }} \
      #     ENDPOINT_VARIABLES_FRONTEND=${{ secrets.ENDPOINT_VARIABLES_FRONTEND }} \
      #     node src/index.js
      #     NODE_ENV=production npm run test
      # - 
      #   name: Testing API
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'
      #   run: |
      #     NODE_ENV=production npm run test



  frontend:
    runs-on: ubuntu-20.04
    if: "contains(github.event.head_commit.message, '/d')"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get current date
        id: date
        run: echo ::set-output name=DATE_NOW::$(date +'%Y_%m_%dT%H_%M_%S')
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: JS Minifier
      #   uses: devatherock/minify-js@v1.0.3
      #   with:
      #     directory: './public/js'
      #     add_suffix: false
      - name: CSS Minifier
        uses: devatherock/minify-js@v1.0.3
        with:
          directory: './public/css'
          add_suffix: false
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: | 
            sosan/frontend-rentacarmallorca:${{steps.date.outputs.DATE_NOW}}
            sosan/frontend-rentacarmallorca:latest
          # secrets: |
          #   "PORT_BACKEND=${{ secrets.PORT_BACKEND }}"
          #   "ENDPOINT_VARIABLES_FRONTEND=${{ secrets.ENDPOINT_VARIABLES_FRONTEND }}"
          #   "TOKEN_FOR_BACKEND_ACCESS=${{ secrets.TOKEN_FOR_BACKEND_ACCESS }}"
      - name: Comandos SSH Servidor
        if: "contains(github.event.head_commit.message, '/d')"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_SERVIDOR }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          port:  ${{ secrets.PORT_SERVIDOR }}
          script: |
            ~/bin/docker context use rootless
            ~/bin/docker pull sosan/frontend-rentacarmallorca:latest
            /usr/bin/docker-compose -f ~/docker-compose.yaml up -d
            ~/bin/docker rmi $(~/bin/docker images | grep "<none>" | awk '{print $3}') 2>/dev/null || echo "No hay images por borrar"

