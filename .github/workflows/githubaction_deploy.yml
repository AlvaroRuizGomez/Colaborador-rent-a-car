name: accion para subir imagen a servidor

# on:
#   push:
#     tags:
#       - 'v*'
    # branches:
    #   - backend

on:
  push:
    branches: [ backend ]
#   pull_request:
#     branches: [ backend ]

jobs:
  # test:
    # runs-on: ubuntu-20.04
    # steps:
      # - 
      #   name: Running Server & Testing API
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'
      #   run: |
      #     npm install
      #     NODE_ENV=production \
      #     PORT_BACKEND=${{ secrets.PORT_BACKEND }} \
      #     PORT_FRONTEND=${{ secrets.PORT_FRONTEND }} \
      #     REDISDB_PORT=${{ secrets.REDISDB_PORT }} \
      #     REDISDB_HOST=${{ secrets.REDISDB_HOST }} \
      #     REDISDB_PASSWORD=${{ secrets.REDISDB_PASSWORD }} \
      #     ENDPOINT_VARIABLES_FRONTEND=${{ secrets.ENDPOINT_VARIABLES_FRONTEND }} \
      #     node src/index.js
      #     NODE_ENV=production npm run test
      # - 
      #   name: Testing API
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'
      #   run: |
      #     NODE_ENV=production npm run test

  buildx:
    runs-on: ubuntu-20.04
    # if: "contains(github.event.*.message, 'subir')"
    # if: github.event.*.message === "subir"
    if: "contains(github.event.head_commit.message, 'subir')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Get current date
        id: date
        run: echo ::set-output name=DATE_NOW::$(date +'%Y_%m_%dT%H_%M_%S')
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: | 
            sosan/backend-rentacarmallorca:${{steps.date.outputs.DATE_NOW}}
            sosan/backend-rentacarmallorca:latest
          secrets: |
            "PORT_BACKEND=${{ secrets.PORT_BACKEND }}"
            "PORT_FRONTEND=${{ secrets.PORT_FRONTEND }}"
            "REDISDB_PORT=${{ secrets.REDISDB_PORT }}"
            "REDISDB_HOST=${{ secrets.REDISDB_HOST }}"
            "REDISDB_PASSWORD=${{ secrets.REDISDB_PASSWORD }}"
            "ENDPOINT_VARIABLES_FRONTEND=${{ secrets.ENDPOINT_VARIABLES_FRONTEND }}"
      
        # if: "contains(github.event.*.message, 'subir despliegue')"
        # if: github.event.*.message === "subir_despliegue"
        
      - name: Comandos SSH Servidor
        if: "contains(github.event.head_commit.message, 'despliegue')"
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: ${{ secrets.HOST_SERVIDOR }} # alvaro@ip
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
            # nerdctl pull sosan/backend-rentacarmallorca:${{steps.date.outputs.DATE_NOW}}
            # nerdctl compose up -d
            # ls
          command: |
            echo ${{secrets.REDISDB_PASSWORD}} > /tmp/redisdb_password.txt && \
            echo ${{secrets.REDISDB_PORT}} > /tmp/redisdb_port.txt && \
            echo ${{secrets.REDISDB_HOST}} > /tmp/redisdb_host.txt && \
            echo ${{secrets.PORT_FRONTEND}} > /tmp/port_frontend.txt && \
            echo ${{secrets.PORT_BACKEND}} > /tmp/port_backend.txt && \
            echo ${{secrets.ENDPOINT_VARIABLES_FRONTEND}} > /tmp/endpoint_variables_frontend.txt && \
            echo << EOF > /tmp/deploy-compose.txt
            version: "3.8"
            services:
              frontend:
                restart: always
                image: sosan/frontend-rentacarmallorca:latest
                container_name: frontend
                ports:
                    - 80:8080
                links:
                    - backend:backend
                environment:
                    URL_BACKEND: backend
                    URL_FRONTEND: frontend
                    NODE_ENV: production
                secrets:
                    - PORT_BACKEND
                    - ENDPOINT_VARIABLES_FRONTEND
                depends_on:
                    - backend
              backend:
                restart: always
                image: sosan/backend-rentacarmallorca:latest
                container_name: backend
                ports:
                    - 3000:3000
                secrets:
                    - PORT_FRONTEND
                    - PORT_BACKEND
                    - REDISDB_PORT
                    - REDISDB_HOST
                    - REDISDB_PASSWORD
                    - ENDPOINT_VARIABLES_FRONTEND
                environment:
                    URL_BACKEND: backend
                    URL_FRONTEND: frontend
                    NODE_ENV: production
                    # PORT_FRONTEND: PORT_FRONTEND
                    # PORT_BACKEND: PORT_BACKEND
                    # REDISDB_PORT: REDISDB_PORT
                    # REDISDB_HOST: REDISDB_HOST
                    # REDISDB_PASSWORD: REDISDB_PASSWORD
                    # ENDPOINT_VARIABLES_FRONTEND: ENDPOINT_VARIABLES_FRONTEND

            secrets:
              REDISDB_PASSWORD:
                file: "/tmp/redisdb_password.txt"
              REDISDB_PORT:
                file: "/tmp/redisdb_port.txt"
              REDISDB_HOST:
                file: "/tmp/redisdb_host.txt"
              PORT_FRONTEND:
                file: "/tmp/port_frontend.txt"
              PORT_BACKEND:
                file: "/tmp/port_backend.txt"
              ENDPOINT_VARIABLES_FRONTEND:
                file: "/tmp/endpoint_variables_frontend.txt"
            EOF
            cat /tmp/deploy-compose.txt
