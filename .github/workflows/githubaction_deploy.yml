name: accion para subir imagen a servidor

# on:
#   push:
#     tags:
#       - '*'
#     # branches:
#     #   - backend

on:
  push:
    branches: [ backend ]
  pull_request:
    branches: [ backend ]

jobs:
  # test:
    # runs-on: ubuntu-20.04
    # steps:
      # - 
      #   name: Running Server & Testing API
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'
      #   run: |
      #     npm install
      #     NODE_ENV=production \
      #     PORT_BACKEND=${{ secrets.PORT_BACKEND }} \
      #     PORT_FRONTEND=${{ secrets.PORT_FRONTEND }} \
      #     REDISDB_PORT=${{ secrets.REDISDB_PORT }} \
      #     REDISDB_HOST=${{ secrets.REDISDB_HOST }} \
      #     REDISDB_PASSWORD=${{ secrets.REDISDB_PASSWORD }} \
      #     ENDPOINT_VARIABLES_FRONTEND=${{ secrets.ENDPOINT_VARIABLES_FRONTEND }} \
      #     node src/index.js
      #     NODE_ENV=production npm run test
      # - 
      #   name: Testing API
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'
      #   run: |
      #     NODE_ENV=production npm run test

  buildx:
    runs-on: ubuntu-20.04
    if: "contains(github.event.*.message, 'subir')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Get current date
        id: date
        run: echo ::set-output name=DATE_NOW::$(date +'%Y_%m_%dT%H_%M_%S')
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: | 
            sosan/backend-rentacarmallorca:${{steps.date.outputs.DATE_NOW}}
            sosan/backend-rentacarmallorca:latest
          secrets: |
            "PORT_BACKEND=${{ secrets.PORT_BACKEND }}"
            "PORT_FRONTEND=${{ secrets.PORT_FRONTEND }}"
            "REDISDB_PORT=${{ secrets.REDISDB_PORT }}"
            "REDISDB_HOST=${{ secrets.REDISDB_HOST }}"
            "REDISDB_PASSWORD=${{ secrets.REDISDB_PASSWORD }}"
            "ENDPOINT_VARIABLES_FRONTEND=${{ secrets.ENDPOINT_VARIABLES_FRONTEND }}"
      
      - name: Execute SSH commmands on remote server
        if: "contains(github.event.*.message, 'subir_despliegue')"
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: ${{ secrets.HOST_SERVIDOR }} # alvaro@ip
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
          # export DOCKER_TAG=${{steps.date.outputs.DATE_NOW}}
          # nerdctl pull sosan/backend-rentacarmallorca:${{steps.date.outputs.DATE_NOW}}
          # nerdctl compose up -d
          command: |
            ls
