name: accion para subir imagen a servidor

on:
  push:
    tags:
      - '*'
    branches:
      - backend
    

# on:
#   push:
#     branches: [ backend ]
#   pull_request:
#     branches: [ backend ]

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - 
        name: Running Server & Testing API
        uses: actions/setup-node@v2
        with:
          node-version: '14'
        run: |
          npm install

          NODE_ENV=production \
          PORT_BACKEND=${{ secrets.PORT_BACKEND }} \
          PORT_FRONTEND=${{ secrets.PORT_FRONTEND }} \
          REDISDB_PORT=${{ secrets.REDISDB_PORT }} \
          REDISDB_HOST=${{ secrets.REDISDB_HOST }} \
          REDISDB_PASSWORD=${{ secrets.REDISDB_PASSWORD }} \
          ENDPOINT_VARIABLES_FRONTEND=${{ secrets.ENDPOINT_VARIABLES_FRONTEND }} \
          node src/index.js

          NODE_ENV=production npm run test
      # - 
      #   name: Testing API
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'
      #   run: |
      #     NODE_ENV=production npm run test

  buildx:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      # - name: Get tag
      #   id: tag
      #   uses: dawidd6/action-get-tag@v1
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: sosan/backend-rentacarmallorca:${{steps.get_version.outputs.VERSION}}
          secrets: |
            "PORT_BACKEND=${{ secrets.PORT_BACKEND }}"
            "PORT_FRONTEND=${{ secrets.PORT_FRONTEND }}"
            "REDISDB_PORT=${{ secrets.REDISDB_PORT }}"
            "REDISDB_HOST=${{ secrets.REDISDB_HOST }}"
            "REDISDB_PASSWORD=${{ secrets.REDISDB_PASSWORD }}"
            "ENDPOINT_VARIABLES_FRONTEND=${{ secrets.ENDPOINT_VARIABLES_FRONTEND }}"
      
      - 
        name: Execute SSH commmands on remote server
        # if: startsWith(github.ref, 'refs/tags/')
        if: "contains(github.event.*.message, 'despliegue')"
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: ${{ secrets.HOST_SERVIDOR }} # alvaro@ip
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
          command: |
            ls -lah
            echo "I am $NAME"
