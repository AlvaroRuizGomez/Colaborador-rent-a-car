version: "3.7"
networks:
  gateway: {}
  # exterior: {}
  # interior: {}

services:
  frontenvoy:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    deploy:
      replicas: 1
    depends_on:
      - frontend
    links: 
      - frontend
      - backoffice
    expose:
      - "80"
      - "443"
      - "3100"
      - "8080"
      - "8081"
      - "8443"
    ports: 
      - "80:80"
      - "443:443"
      - "3100:3100"
      - "8080:8080"
      - "8081:8081"
      - "8443:8443"
    volumes:
      - ./config_frontend_envoy.yaml:/etc/front-envoy.yaml
      - ./certs/fullchain.pem:/etc/cert.pem
      - ./certs/privkey.pem:/etc/privkey.pem
      # - /etc/letsencrypt/archive/zufardhiyaulhaq.com/privkey1.pem:/etc/privkey.pem
      # - ./nginx.conf:/opt/bitnami/nginx/conf/server_blocks/nginx.conf:ro
      # - ./certs:/certs
    networks:
      - gateway
    secrets:
      - SERVER_KEY_SSL
      - SERVER_CRT_SSL
      - SERVER_LOCAL_KEY_SSL
      - SERVER_LOCAL_CRT_SSL
  frontend:
    restart: always
    deploy:
      replicas: 1
    build:
      context: "../colaborador-rent-a-car-frontend"
      dockerfile: "Dockerfile"
    expose: 
      - 8080
    environment:
      URL_BACKEND: backend
      URL_FRONTEND: frontend
      NODE_ENV: production
    secrets:
        - PORT_BACKEND
        - ENDPOINT_VARIABLES_FRONTEND
        - TOKEN_FOR_BACKEND_ACCESS
    networks:
      - gateway
      # - exterior
      # - interior
    depends_on:
      - backend
  backoffice:
    restart: always
    deploy:
      replicas: 1
    build:
      context: "../colaborador-rent-a-car-backoffice"
      dockerfile: "Dockerfile.local"
    volumes: 
      - "../colaborador-rent-a-car-backoffice/:/usr/src/app"
    expose: 
      - 3100
    environment:
      URL_BACKEND: backend
      URL_BACKOFFICE: backoffice
      NODE_ENV: production
    secrets:
        - PORT_BACKEND
        - PORT_BACKOFFICE
        - ENDPOINT_VARIABLES_FRONTEND
        - TOKEN_FOR_BACKEND_ACCESS
    networks:
      - gateway
      # - exterior
      # - interior
    depends_on:
      - backend
  backend:
    restart: always
    deploy:
      replicas: 1
    build:
      context: "../colaborador-rent-a-car-backend"
      dockerfile: "Dockerfile.local"
    expose: 
      - 3000
    networks:
      - gateway
      # - interior
    secrets:
      - PORT_FRONTEND
      - PORT_BACKEND
      - REDISDB_PORT
      - REDISDB_HOST
      - REDISDB_PASSWORD
      - ENDPOINT_VARIABLES_FRONTEND
      - TOKEN_FOR_BACKEND_ACCESS
    environment:
      URL_BACKEND: backend
      URL_FRONTEND: frontend
      URL_BACKOFFICE: backoffice
      NODE_ENV: production
secrets:
  SERVER_KEY_SSL:
    file: "./certs/server.key"
  SERVER_CRT_SSL:
    file: "./certs/fullchain.pem"
  SERVER_LOCAL_KEY_SSL:
    file: "./certs/server_local.key"
  SERVER_LOCAL_CRT_SSL:
    file: "./certs/server_local.crt"

  REDISDB_PASSWORD:
    file: "../colaborador-rent-a-car-backend/secrets/redisdb_password.txt"
  REDISDB_PORT:
    file: "../colaborador-rent-a-car-backend/secrets/redisdb_port.txt"
  REDISDB_HOST:
    file: "../colaborador-rent-a-car-backend/secrets/redisdb_host.txt"
  PORT_FRONTEND:
    file: "../colaborador-rent-a-car-backend/secrets/port_frontend.txt"
  PORT_BACKEND:
    file: "../colaborador-rent-a-car-backend/secrets/port_backend.txt"
  ENDPOINT_VARIABLES_FRONTEND:
    file: "../colaborador-rent-a-car-backend/secrets/endpoint_variables_frontend.txt"
  TOKEN_FOR_BACKEND_ACCESS:
    file: "../colaborador-rent-a-car-backend/secrets/token_for_backend_access.txt"
  PORT_BACKOFFICE:
    file: "../colaborador-rent-a-car-backend/secrets/port_backoffice.txt"